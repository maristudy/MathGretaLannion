
# revisions pour le BTS blanc 02

"""
algorithme A1 
variables alphanumériques : tarifs(), famille(), ticket(), nom, refTarif
variables numériques : i, j, age, ageMin, ageMax, prix

DEBUT
1    POUR i DE 0 à taille(famille)-1 FAIRE
2        nom <- famille[i][0]
3        age <- famille[i][1]
4        POUR j DE 0 à taille(tarifs)-1 FAIRE
5            ageMin <- tarifs[j][0]
6            ageMax <- tarifs[j][1]
7            prix <- tarifs[j][2]
8            refTarif <- tarifs[j][3]
9            SI ageMin <= age ...... age <= ageMax ALORS
10                ticket <- ticket.ajouter([nom, prix,refTarif])
11            FIN SI
12        FIN POUR
13    FIN POUR
14    afficher ticket
FIN        


1/ La ligne 9 a été partiellement effacée, complétez la correctement
SI ageMin <= age et age <= ageMax ALORS

2/ Pourquoi avons nous besoin de deux variables d'incrémentation i et j ? pouvons nous en avoir qu'une seule ?
Nous avons besoin de 2 variables d'incrémentation différentes car les boucles sont imbriquées? Nous ne pouvons pas en avoir qu'une seule.

3/ Quel sera le résultat de cet algorithme si on utilise les tableaux "famille" et "tarifs" qui vous sont donnés ?
[['papi', 1, 'T4'], ['mamie', 4, 'T3'], ['papa', 4, 'T3'], ['maman', 3, 'T2'], ['lutin', 2, 'T1'], ['petiot', 2, 'T1']]

4/ Pourquoi l'age maximum du dernier tarif est à 999 ans ?
999 est un âge "suffisament grand" pour ne pas être dépassé.

5/ Quel est le rôle de cet algorithme ?
Cet algorithme crée un tableau "ticket" indiquant pour chaque personne d'une famille les informations suivantes :
son nom, le prix du ticket, la référence du prix correspondant à la personne

6/ Créer un algorithme A2 à partir de A1. Vous modifiez A1 en un algorithme A2 qui affiche le ticket avec des numéros de ligne et affiche le montant total du ticket
exemple:
1 : nom:papi prix:1 euro(s) refTarif:T4
2 : nom:mamie prix:4 euro(s) refTarif:T3
3 : nom:papa prix:4 euro(s) refTarif:T3
4 : nom:lutin prix:2 euro(s) refTarif:T1
total à payer : 11 euro(s)



algorithme A2
variables alphanumériques : tarifs(), famille(), ticket(), nom, refTarif
variables numériques : i, j, age, ageMin, ageMax, prix, total

DEBUT
    total <- 0
    POUR i DE 0 à taille(famille)-1 FAIRE
        nom <- famille[i][0]
        age <- famille[i][1]
        POUR j DE 0 à taille(tarifs)-1 FAIRE
            ageMin <- tarifs[j][0]
            ageMax <- tarifs[j][1]
            prix <- tarifs[j][2]
            refTarif <- tarifs[j][3]
            SI ageMin <= age et age <= ageMax ALORS
                ticket <- ticket.ajouter([nom, prix,refTarif])
                total <- total + prix
            FIN SI
        FIN POUR
    FIN POUR
    
    POUR i DE 1 à taille(ticket) FAIRE
        affichier(i, " : nom : ", ticket[i][0], " prix:", ticket[i][1],  "euro(s) refTarif:",ticket[i][2])
    FIN POUR
    afficher("total à payer : ",total," euro(s)")
FIN  










7/ Créer un algorithme A3 à partir de A2. Vous modifier A2 en un algorithme A3 qui propose de supprimer des lignes du ticket.
On arrête de proposer de supprimer des lignes en saisissant -1 ou lorsque le ticket est vide.
La ligne supprimée est celle dont on a donné le numéro de ligne.
Après chaque suppression, on affiche le nouveau ticket avec le nouveau montant total

exemple:
en reprennant le ticket précédent, si on supprime la ligne 3 et on obtient :
1 : nom:papi prix:1 euro(s) refTarif:T4
2 : nom:mamie prix:4 euro(s) refTarif:T3
3 : nom:lutin prix:2 euro(s) refTarif:T1
total à payer : 7 euro(s)











algorithme A3
variables alphanumériques : tarifs(), famille(), ticket(), nom, refTarif
variables numériques : i, j, age, ageMin, ageMax, prix, total, reponse

DEBUT

    total <- 0
    POUR i DE 0 à taille(famille)-1 FAIRE
        nom <- famille[i][0]
        age <- famille[i][1]
        POUR j DE 0 à taille(tarifs)-1 FAIRE
            ageMin <- tarifs[j][0]
            ageMax <- tarifs[j][1]
            prix <- tarifs[j][2]
            refTarif <- tarifs[j][3]
            SI ageMin <= age et age <= ageMax ALORS
                ticket <- ticket.ajouter([nom, prix,refTarif])
                total <- total + prix
            FIN SI
        FIN POUR
    FIN POUR

    POUR i DE 1 à taille(ticket) FAIRE
        affichier(i, " : nom : ", ticket[i][0], " prix:", ticket[i][1],  "euro(s) refTarif:",ticket[i][2])
    FIN POUR
    afficher("total à payer : ",total," euro(s)")
        
    reponse <- -2
    TANT QUE (reponse != -1 ET taille(ticket)!=0) FAIRE
        afficher("numero de ligne à supprimer ( -1 pour quitter ) : ")
        saisir(reponse)
        
        SI reponse != -1 ALORS
            ticket <- ticket.supprimerLigne(reponse-1)
            total <- 0
            POUR j DE 0 à taille(ticket)-1 FAIRE
                total <- total + ticket[j][1]
            FIN POUR
        FIN SI
        
        POUR i DE 1 à taille(ticket) FAIRE
            affichier(i, " : nom : ", ticket[i][0], " prix:", ticket[i][1],  "euro(s) refTarif:",ticket[i][2])
        FIN POUR
        afficher("total à payer : ",total," euro(s)")
        
    FIN TANT QUE
FIN  





implémenter les algorithmes A1, A2, A3 en python dans 3 fichiers différents. Tester les programmes réalisés





"""








    




#ageMin, ageMax, prix, refTarif
tarifs=[[0,3,0,"T0"],
        [4,11,2,"T1"],
        [12,26,3,"T2"],
        [27,65,4,"T3"],
        [66,999,1,"T4"]]

#nom, age
famille=[["papi",66],
         ["mamie",65],
         ["papa",29],
         ["maman",26],
         ["lutin",5],
         ["petiot",4]]

ticket=[]



"""
#algo A1
for i in range(0,len(famille)):
    nom=famille[i][0]
    age=famille[i][1]
    for j in range( 0,len(tarifs)):
        ageMin=tarifs[j][0]
        ageMax=tarifs[j][1]
        prix=tarifs[j][2]
        refTarif=tarifs[j][3]
        if ageMin <= age and age <= ageMax :
            ticket.append([nom, prix,refTarif])
print(ticket)

"""




"""
#algo A2

total=0
for i in range(0,len(famille)):
    nom=famille[i][0]
    age=famille[i][1]
    for j in range( 0,len(tarifs)):
        ageMin=tarifs[j][0]
        ageMax=tarifs[j][1]
        prix=tarifs[j][2]
        refTarif=tarifs[j][3]
        if ageMin <= age and age <= ageMax :
            ticket.append([nom, prix,refTarif])
            total=total+prix
for i in range(0,len(ticket)):
    print(i+1, " : nom : ", ticket[i][0], " prix:", ticket[i][1],  "euro(s) refTarif:",ticket[i][2])
print("total à payer : ",total," euro(s)")    
"""



#algo A3

total=0
for i in range(0,len(famille)):
    nom=famille[i][0]
    age=famille[i][1]
    for j in range( 0,len(tarifs)):
        ageMin=tarifs[j][0]
        ageMax=tarifs[j][1]
        prix=tarifs[j][2]
        refTarif=tarifs[j][3]
        if ageMin <= age and age <= ageMax :
            ticket.append([nom, prix,refTarif])
            total=total+prix
for i in range(0,len(ticket)):
    print(i+1, " : nom : ", ticket[i][0], " prix:", ticket[i][1],  "euro(s) refTarif:",ticket[i][2])
print("total à payer : ",total," euro(s)")    

reponse=-2
while ((reponse != -1) and (len(ticket)!=0)) :
    reponse=int(input("numero de ligne à supprimer ( -1 pour quitter ) : "))
    if reponse != -1 :
        ticket.pop(int(reponse)-1)
        total=0
        for j in range( 0,len(ticket)):
            total = total + ticket[j][1]
        for i in range(0,len(ticket)):
            print(i+1, " : nom : ", ticket[i][0], " prix:", ticket[i][1],  "euro(s) refTarif:",ticket[i][2])
        print("total à payer : ",total," euro(s)")
                            
                            
                            